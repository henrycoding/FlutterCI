name: android Build WYS-USER

on:
  workflow_dispatch:
    inputs:
      is_dev:
        description: '是否为Dev版本'
        required: false
        type: boolean
        default: false
      bump_build:
        description: '是否自动增加 build 号'
        required: true
        type: boolean
        default: true
      branch:
        description: "构建分支"
        required: true
        default: "product"
        type: choice
        options:
          - product
          - main

jobs:
  build:
    name: CI Build
    runs-on: macos-latest

    steps:

# 设置SSH KEY
      - name: Setup SSH
        run: |
          mkdir -p "$HOME/.ssh"
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 "$HOME/.ssh/id_rsa"
          ssh-keyscan codeup.aliyun.com >> "$HOME/.ssh/known_hosts"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

# Clone Repo
      - name: Clone target repo
        run: git clone --recursive "$WYS_USER_URL" -b ${{ github.event.inputs.branch }}
        env:
          WYS_USER_URL: ${{ secrets.WYS_USER_URL }}
          WYS_USER_BRANCH: ${{ secrets.WYS_USER_BRANCH }}

# 版本号自动+1
      - name: Bump build number & push
        if: ${{ github.event.inputs.bump_build == 'true' }}
        run: |
          cd wanyisheng
          
          # 读取 pubspec.yaml version
          VERSION_LINE=$(grep '^version:' pubspec.yaml)
          VERSION_NAME=$(echo "$VERSION_LINE" | cut -d'+' -f1 | awk '{print $2}')
          OLD_BUILD=$(echo "$VERSION_LINE" | cut -d'+' -f2)
          OLD_BUILD=${OLD_BUILD:-0}

          # 获取今天日期 (yyyyMMdd)
          TODAY=$(date +%Y%m%d)

          # 提取旧 build 号的日期部分和计数部分
          OLD_DATE=${OLD_BUILD:0:8}
          OLD_COUNT=${OLD_BUILD:8:1}
          OLD_COUNT=${OLD_COUNT:-0}

          if [ "$OLD_DATE" = "$TODAY" ]; then
            # 如果是今天，计数+1
            NEW_COUNT=$((OLD_COUNT + 1))
          else
            # 如果不是今天，重置为0
            NEW_COUNT=0
          fi

          NEW_BUILD_NUM="${TODAY}${NEW_COUNT}"

          echo "Current version: $VERSION_NAME+$OLD_BUILD"
          echo "New build number: $NEW_BUILD_NUM"
          
          # 替换 pubspec.yaml
          # 兼容 macOS 和 Linux 的 sed
          if [ "${{ runner.os }}" = "macOS" ]; then
            sed -i "" "s/^version:.*/version: $VERSION_NAME+$NEW_BUILD_NUM/" pubspec.yaml
          else
            sed -i "s/^version:.*/version: $VERSION_NAME+$NEW_BUILD_NUM/" pubspec.yaml
          fi
          echo "NEW_BUILD_NUM=$NEW_BUILD_NUM" >> $GITHUB_ENV
          
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add pubspec.yaml
          git commit -m "release: $VERSION_NAME+$NEW_BUILD_NUM" || echo "No changes to commit"
          git push
          cd ..

# 安装Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version-file: wanyisheng/pubspec.yaml

      - run: flutter --version

# Build Flutter
      - name: Building APK
        id: build_apk
        run: |
          cd wanyisheng/
          if [ "${{ github.event.inputs.is_dev }}" = "true" ]; then
            echo "⚙️ 构建 Dev 版本"
            flutter build apk --target-platform android-arm64 --dart-define=git-branch=$(git rev-parse --abbrev-ref HEAD) --dart-define=git-commit=$(git rev-parse --short HEAD) --dart-define=app-debug-flag=true --obfuscate --split-debug-info=./symbols
            build_type="dev"
            apk_path="build/app/outputs/flutter-apk/app-release.apk"
          else
            echo "⚙️ 构建 Release 版本"
            flutter build apk --target-platform android-arm64 --dart-define=git-branch=$(git rev-parse --abbrev-ref HEAD) --dart-define=git-commit=$(git rev-parse --short HEAD) --obfuscate --split-debug-info=./symbols
            build_type="release"
            apk_path="build/app/outputs/flutter-apk/app-release.apk"
          fi
          version_str=$(grep -m 1 -E '^version:' pubspec.yaml | sed 's/version: //; s/+/_/')
          apk_name="wys_user_${version_str}_${build_type}.apk"
          echo "path=${apk_name}" >> $GITHUB_OUTPUT
          mv ${apk_path} ../${apk_name}
        env:
          PUB_HOSTED_URL: https://pub.flutter-io.cn
          FLUTTER_STORAGE_BASE_URL: https://storage.flutter-io.cn
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

# Upload OSS
      - name: Upload OSS
        run: |
          sudo -v ; curl https://gosspublic.alicdn.com/ossutil/install.sh | sudo bash
          ossutil config -e oss-cn-beijing.aliyuncs.com -i ${{ secrets.OSS_ACCESS_KEY_ID }} -k ${{ secrets.OSS_ACCESS_KEY_SECRET }} -L CH
          ossutil cp -rf ${{ steps.build_apk.outputs.path }} oss://${{ secrets.OSS_BUCKET }}/app/wanyisheng/beta/